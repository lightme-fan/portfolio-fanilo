{"version":3,"sources":["webpack:///./node_modules/gatsby-tech-blog-theme/src/components/SearchComponent.js","webpack:///./node_modules/gatsby-tech-blog-theme/src/components/Search.js","webpack:///./node_modules/gatsby-tech-blog-theme/src/components/StyledComponents.js","webpack:///./node_modules/elasticlunr/elasticlunr.js"],"names":["Search","props","getOrCreateIndex","index","Index","load","searchIndex","search","evt","query","target","value","setState","results","map","ref","documentStore","getDoc","state","render","type","this","onChange","placeholder","href","page","title","date","excerpt","timeToRead","slug","categories","path","key","Component","Header","data","useStaticQuery","siteSearchIndex","Hero","styled","div","padding","theme","colors","grey","dark","breakpoints","phone","tablet","PostListContent","global","step2list","step3list","v","C","re_mgr0","re_mgr1","re_meq1","re_s_v","re_1a","re2_1a","re_1b","re2_1b","re_1b_2","re2_1b_2","re3_1b_2","re4_1b_2","re_1c","re_2","re_3","re_4","re2_4","re_5","re_5_1","re3_5","elasticlunr","config","idx","pipeline","add","trimmer","stopWordFilter","stemmer","call","version","lunr","utils","warn","message","console","toString","obj","EventEmitter","events","prototype","addListener","args","Array","slice","arguments","fn","pop","names","TypeError","forEach","name","hasHandler","push","removeListener","fnIndex","indexOf","splice","length","emit","apply","undefined","tokenizer","str","isArray","arr","filter","token","t","toLowerCase","out","item","tokens","split","seperator","concat","trim","defaultSeperator","setSeperator","sep","resetSeperator","getSeperator","Pipeline","_queue","registeredFunctions","registerFunction","label","getRegisteredFunction","warnIfFunctionNotRegistered","serialised","fnName","Error","fns","after","existingFn","newFn","pos","before","remove","run","tokenLength","pipelineLength","i","j","reset","get","toJSON","_fields","_ref","DocumentStore","eventEmitter","_idfCache","on","bind","off","serialisedData","field","fields","InvertedIndex","addField","fieldName","setRef","refName","saveDocument","save","addDoc","doc","emitEvent","docRef","fieldTokens","addFieldLength","tokenCount","termFrequency","Math","sqrt","addToken","tf","removeDocByRef","isDocStored","hasDoc","removeDoc","removeToken","updateDoc","idf","term","cacheKey","Object","hasOwnProperty","df","getDocFreq","log","getFields","userConfig","configStr","JSON","stringify","Configuration","queryTokens","queryResults","fieldSearchResults","fieldSearch","fieldBoost","boost","score","sort","a","b","booleanType","bool","expand","scores","docTokens","expandToken","queryTokenScores","docs","getDocs","filteredDocs","fieldSearchStats","getTermFrequency","fieldLength","getFieldLength","fieldLengthNorm","penality","mergeScores","coordNorm","accumScores","op","intersection","n","indexJson","use","plugin","unshift","_save","docInfo","store","copy","constructor","attr","clone","updateFieldLength","c","RegExp","w","stem","suffix","firstch","re","re2","re3","re4","substr","toUpperCase","test","replace","fp","exec","stopWords","clearStopWords","addStopWords","words","word","resetStopWords","defaultStopWords","root","tokenInfo","hasToken","node","getNode","memo","parse","buildUserConfig","error","buildDefaultConfig","global_bool","global_expand","field_config","field_expand","addAllFields2UserConfig","SortedSet","elements","set","element","locationFor","toArray","ctx","elem","start","end","sectionLength","pivot","floor","pivotElem","intersect","otherSet","intersectSet","a_len","b_len","union","longSet","shortSet","unionSet","shortSetElements"],"mappings":"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","file":"component---node-modules-gatsby-tech-blog-theme-src-components-search-js-208ebe4696c233c2fc94.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Index } from \"elasticlunr\";\r\nimport { Layout, Article, Wrapper, SectionTitle } from \"./index\";\r\nimport { PostListContent, Hero } from \"./StyledComponents\";\r\n\r\nexport default class Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      query: ``,\r\n      results: []\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <Wrapper>\r\n          <Hero>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.query}\r\n              onChange={this.search}\r\n              placeholder=\"search\"\r\n            />\r\n            <br />\r\n            <br />\r\n            Search By{\" \"}\r\n            <a href=\"https://www.gatsbyjs.org/packages/@gatsby-contrib/gatsby-plugin-elasticlunr-search\">\r\n              Elastic Lunr\r\n            </a>\r\n          </Hero>\r\n          <PostListContent>\r\n            <SectionTitle>Results</SectionTitle>\r\n            {this.state.results.map(page => (\r\n              <Article\r\n                title={page.title}\r\n                date={page.date}\r\n                excerpt={page.excerpt}\r\n                timeToRead={page.timeToRead}\r\n                slug={page.slug}\r\n                categories={page.categories}\r\n                path={page.path}\r\n                key={page.slug}\r\n              />\r\n            ))}\r\n          </PostListContent>\r\n        </Wrapper>\r\n      </Layout>\r\n    );\r\n  }\r\n  getOrCreateIndex = () =>\r\n    this.index\r\n      ? this.index\r\n      : // Create an elastic lunr index and hydrate with graphql query results\r\n        Index.load(this.props.searchIndex);\r\n\r\n  search = evt => {\r\n    const query = evt.target.value;\r\n    this.index = this.getOrCreateIndex();\r\n    this.setState({\r\n      query,\r\n      // Query the index with search string to get an [] of IDs\r\n      results: this.index\r\n        .search(query, {})\r\n        // Map over each ID and return the full document\r\n        .map(({ ref }) => this.index.documentStore.getDoc(ref))\r\n    });\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { useStaticQuery, graphql } from \"gatsby\";\r\n\r\nimport Search from \"./SearchComponent\";\r\n\r\nconst Header = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query SearchIndexQuery {\r\n      siteSearchIndex {\r\n        index\r\n      }\r\n    }\r\n  `);\r\n  return <Search searchIndex={data.siteSearchIndex.index} />;\r\n};\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\n\r\nconst Hero = styled.div`\r\n  grid-column: 2;\r\n  padding: ${props => props.padding || \"3rem 2rem 6rem 2rem\"};\r\n  text-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);\r\n  color: ${props => props.theme.colors.grey.dark};\r\n\r\n  @media (max-width: ${props => props.theme.breakpoints.phone}) {\r\n    padding: 2rem 1rem 4rem 1rem;\r\n  }\r\n\r\n  p {\r\n    font-size: 1.68rem;\r\n    margin-top: -1rem;\r\n    @media (max-width: ${props => props.theme.breakpoints.tablet}) {\r\n      font-size: 1.45rem;\r\n    }\r\n    @media (max-width: ${props => props.theme.breakpoints.phone}) {\r\n      font-size: 1.25rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst PostListContent = styled.div`\r\n  grid-column: 2;\r\n  box-shadow: 0 4px 120px rgba(0, 0, 0, 0.1);\r\n  border-radius: 1rem;\r\n  padding: 3rem 6rem;\r\n  @media (max-width: ${props => props.theme.breakpoints.tablet}) {\r\n    padding: 3rem 2rem;\r\n  }\r\n  @media (max-width: ${props => props.theme.breakpoints.phone}) {\r\n    padding: 2rem 1.5rem;\r\n  }\r\n  overflow: hidden;\r\n`;\r\n\r\nexport { Hero, PostListContent };\r\n","require(\"core-js/modules/es.array.sort.js\");\n\n/**\n * elasticlunr - http://weixsong.github.io\n * Lightweight full-text search engine in Javascript for browser search and offline search. - 0.9.5\n *\n * Copyright (C) 2016 Oliver Nightingale\n * Copyright (C) 2016 Wei Song\n * MIT Licensed\n * @license\n */\n(function () {\n  /*!\n   * elasticlunr.js\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * Convenience function for instantiating a new elasticlunr index and configuring it\n   * with the default pipeline functions and the passed config function.\n   *\n   * When using this convenience function a new index will be created with the\n   * following functions already in the pipeline:\n   * \n   * 1. elasticlunr.trimmer - trim non-word character\n   * 2. elasticlunr.StopWordFilter - filters out any stop words before they enter the\n   * index\n   * 3. elasticlunr.stemmer - stems the tokens before entering the index.\n   *\n   *\n   * Example:\n   *\n   *     var idx = elasticlunr(function () {\n   *       this.addField('id');\n   *       this.addField('title');\n   *       this.addField('body');\n   *       \n   *       //this.setRef('id'); // default ref is 'id'\n   *\n   *       this.pipeline.add(function () {\n   *         // some custom pipeline function\n   *       });\n   *     });\n   * \n   *    idx.addDoc({\n   *      id: 1, \n   *      title: 'Oracle released database 12g',\n   *      body: 'Yestaday, Oracle has released their latest database, named 12g, more robust. this product will increase Oracle profit.'\n   *    });\n   * \n   *    idx.addDoc({\n   *      id: 2, \n   *      title: 'Oracle released annual profit report',\n   *      body: 'Yestaday, Oracle has released their annual profit report of 2015, total profit is 12.5 Billion.'\n   *    });\n   * \n   *    # simple search\n   *    idx.search('oracle database');\n   * \n   *    # search with query-time boosting\n   *    idx.search('oracle database', {fields: {title: {boost: 2}, body: {boost: 1}}});\n   *\n   * @param {Function} config A function that will be called with the new instance\n   * of the elasticlunr.Index as both its context and first parameter. It can be used to\n   * customize the instance of new elasticlunr.Index.\n   * @namespace\n   * @module\n   * @return {elasticlunr.Index}\n   *\n   */\n  var elasticlunr = function elasticlunr(config) {\n    var idx = new elasticlunr.Index();\n    idx.pipeline.add(elasticlunr.trimmer, elasticlunr.stopWordFilter, elasticlunr.stemmer);\n    if (config) config.call(idx, idx);\n    return idx;\n  };\n\n  elasticlunr.version = \"0.9.5\"; // only used this to make elasticlunr.js compatible with lunr-languages\n  // this is a trick to define a global alias of elasticlunr\n\n  lunr = elasticlunr;\n  /*!\n   * elasticlunr.utils\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * A namespace containing utils for the rest of the elasticlunr library\n   */\n\n  elasticlunr.utils = {};\n  /**\n   * Print a warning message to the console.\n   *\n   * @param {String} message The message to be printed.\n   * @memberOf Utils\n   */\n\n  elasticlunr.utils.warn = function (global) {\n    return function (message) {\n      if (global.console && console.warn) {\n        console.warn(message);\n      }\n    };\n  }(this);\n  /**\n   * Convert an object to string.\n   *\n   * In the case of `null` and `undefined` the function returns\n   * an empty string, in all other cases the result of calling\n   * `toString` on the passed object is returned.\n   *\n   * @param {object} obj The object to convert to a string.\n   * @return {String} string representation of the passed object.\n   * @memberOf Utils\n   */\n\n\n  elasticlunr.utils.toString = function (obj) {\n    if (obj === void 0 || obj === null) {\n      return \"\";\n    }\n\n    return obj.toString();\n  };\n  /*!\n   * elasticlunr.EventEmitter\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * elasticlunr.EventEmitter is an event emitter for elasticlunr.\n   * It manages adding and removing event handlers and triggering events and their handlers.\n   *\n   * Each event could has multiple corresponding functions,\n   * these functions will be called as the sequence that they are added into the event.\n   * \n   * @constructor\n   */\n\n\n  elasticlunr.EventEmitter = function () {\n    this.events = {};\n  };\n  /**\n   * Binds a handler function to a specific event(s).\n   *\n   * Can bind a single function to many different events in one call.\n   *\n   * @param {String} [eventName] The name(s) of events to bind this function to.\n   * @param {Function} fn The function to call when an event is fired.\n   * @memberOf EventEmitter\n   */\n\n\n  elasticlunr.EventEmitter.prototype.addListener = function () {\n    var args = Array.prototype.slice.call(arguments),\n        fn = args.pop(),\n        names = args;\n    if (typeof fn !== \"function\") throw new TypeError(\"last argument must be a function\");\n    names.forEach(function (name) {\n      if (!this.hasHandler(name)) this.events[name] = [];\n      this.events[name].push(fn);\n    }, this);\n  };\n  /**\n   * Removes a handler function from a specific event.\n   *\n   * @param {String} eventName The name of the event to remove this function from.\n   * @param {Function} fn The function to remove from an event.\n   * @memberOf EventEmitter\n   */\n\n\n  elasticlunr.EventEmitter.prototype.removeListener = function (name, fn) {\n    if (!this.hasHandler(name)) return;\n    var fnIndex = this.events[name].indexOf(fn);\n    if (fnIndex === -1) return;\n    this.events[name].splice(fnIndex, 1);\n    if (this.events[name].length == 0) delete this.events[name];\n  };\n  /**\n   * Call all functions that bounded to the given event.\n   *\n   * Additional data can be passed to the event handler as arguments to `emit`\n   * after the event name.\n   *\n   * @param {String} eventName The name of the event to emit.\n   * @memberOf EventEmitter\n   */\n\n\n  elasticlunr.EventEmitter.prototype.emit = function (name) {\n    if (!this.hasHandler(name)) return;\n    var args = Array.prototype.slice.call(arguments, 1);\n    this.events[name].forEach(function (fn) {\n      fn.apply(undefined, args);\n    }, this);\n  };\n  /**\n   * Checks whether a handler has ever been stored against an event.\n   *\n   * @param {String} eventName The name of the event to check.\n   * @private\n   * @memberOf EventEmitter\n   */\n\n\n  elasticlunr.EventEmitter.prototype.hasHandler = function (name) {\n    return name in this.events;\n  };\n  /*!\n   * elasticlunr.tokenizer\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * A function for splitting a string into tokens.\n   * Currently English is supported as default.\n   * Uses `elasticlunr.tokenizer.seperator` to split strings, you could change\n   * the value of this property to set how you want strings are split into tokens.\n   * IMPORTANT: use elasticlunr.tokenizer.seperator carefully, if you are not familiar with\n   * text process, then you'd better not change it.\n   *\n   * @module\n   * @param {String} str The string that you want to tokenize.\n   * @see elasticlunr.tokenizer.seperator\n   * @return {Array}\n   */\n\n\n  elasticlunr.tokenizer = function (str) {\n    if (!arguments.length || str === null || str === undefined) return [];\n\n    if (Array.isArray(str)) {\n      var arr = str.filter(function (token) {\n        if (token === null || token === undefined) {\n          return false;\n        }\n\n        return true;\n      });\n      arr = arr.map(function (t) {\n        return elasticlunr.utils.toString(t).toLowerCase();\n      });\n      var out = [];\n      arr.forEach(function (item) {\n        var tokens = item.split(elasticlunr.tokenizer.seperator);\n        out = out.concat(tokens);\n      }, this);\n      return out;\n    }\n\n    return str.toString().trim().toLowerCase().split(elasticlunr.tokenizer.seperator);\n  };\n  /**\n   * Default string seperator.\n   */\n\n\n  elasticlunr.tokenizer.defaultSeperator = /[\\s\\-]+/;\n  /**\n   * The sperator used to split a string into tokens. Override this property to change the behaviour of\n   * `elasticlunr.tokenizer` behaviour when tokenizing strings. By default this splits on whitespace and hyphens.\n   *\n   * @static\n   * @see elasticlunr.tokenizer\n   */\n\n  elasticlunr.tokenizer.seperator = elasticlunr.tokenizer.defaultSeperator;\n  /**\n   * Set up customized string seperator\n   *\n   * @param {Object} sep The customized seperator that you want to use to tokenize a string.\n   */\n\n  elasticlunr.tokenizer.setSeperator = function (sep) {\n    if (sep !== null && sep !== undefined && typeof sep === 'object') {\n      elasticlunr.tokenizer.seperator = sep;\n    }\n  };\n  /**\n   * Reset string seperator\n   *\n   */\n\n\n  elasticlunr.tokenizer.resetSeperator = function () {\n    elasticlunr.tokenizer.seperator = elasticlunr.tokenizer.defaultSeperator;\n  };\n  /**\n   * Get string seperator\n   *\n   */\n\n\n  elasticlunr.tokenizer.getSeperator = function () {\n    return elasticlunr.tokenizer.seperator;\n  };\n  /*!\n   * elasticlunr.Pipeline\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * elasticlunr.Pipelines maintain an ordered list of functions to be applied to \n   * both documents tokens and query tokens.\n   *\n   * An instance of elasticlunr.Index will contain a pipeline\n   * with a trimmer, a stop word filter, an English stemmer. Extra\n   * functions can be added before or after either of these functions or these\n   * default functions can be removed.\n   *\n   * When run the pipeline, it will call each function in turn.\n   *\n   * The output of the functions in the pipeline will be passed to the next function\n   * in the pipeline. To exclude a token from entering the index the function\n   * should return undefined, the rest of the pipeline will not be called with\n   * this token.\n   *\n   * For serialisation of pipelines to work, all functions used in an instance of\n   * a pipeline should be registered with elasticlunr.Pipeline. Registered functions can\n   * then be loaded. If trying to load a serialised pipeline that uses functions\n   * that are not registered an error will be thrown.\n   *\n   * If not planning on serialising the pipeline then registering pipeline functions\n   * is not necessary.\n   *\n   * @constructor\n   */\n\n\n  elasticlunr.Pipeline = function () {\n    this._queue = [];\n  };\n\n  elasticlunr.Pipeline.registeredFunctions = {};\n  /**\n   * Register a function in the pipeline.\n   *\n   * Functions that are used in the pipeline should be registered if the pipeline\n   * needs to be serialised, or a serialised pipeline needs to be loaded.\n   *\n   * Registering a function does not add it to a pipeline, functions must still be\n   * added to instances of the pipeline for them to be used when running a pipeline.\n   *\n   * @param {Function} fn The function to register.\n   * @param {String} label The label to register this function with\n   * @memberOf Pipeline\n   */\n\n  elasticlunr.Pipeline.registerFunction = function (fn, label) {\n    if (label in elasticlunr.Pipeline.registeredFunctions) {\n      elasticlunr.utils.warn('Overwriting existing registered function: ' + label);\n    }\n\n    fn.label = label;\n    elasticlunr.Pipeline.registeredFunctions[label] = fn;\n  };\n  /**\n   * Get a registered function in the pipeline.\n   *\n   * @param {String} label The label of registered function.\n   * @return {Function}\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.getRegisteredFunction = function (label) {\n    if (label in elasticlunr.Pipeline.registeredFunctions !== true) {\n      return null;\n    }\n\n    return elasticlunr.Pipeline.registeredFunctions[label];\n  };\n  /**\n   * Warns if the function is not registered as a Pipeline function.\n   *\n   * @param {Function} fn The function to check for.\n   * @private\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.warnIfFunctionNotRegistered = function (fn) {\n    var isRegistered = fn.label && fn.label in this.registeredFunctions;\n\n    if (!isRegistered) {\n      elasticlunr.utils.warn('Function is not registered with pipeline. This may cause problems when serialising the index.\\n', fn);\n    }\n  };\n  /**\n   * Loads a previously serialised pipeline.\n   *\n   * All functions to be loaded must already be registered with elasticlunr.Pipeline.\n   * If any function from the serialised data has not been registered then an\n   * error will be thrown.\n   *\n   * @param {Object} serialised The serialised pipeline to load.\n   * @return {elasticlunr.Pipeline}\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.load = function (serialised) {\n    var pipeline = new elasticlunr.Pipeline();\n    serialised.forEach(function (fnName) {\n      var fn = elasticlunr.Pipeline.getRegisteredFunction(fnName);\n\n      if (fn) {\n        pipeline.add(fn);\n      } else {\n        throw new Error('Cannot load un-registered function: ' + fnName);\n      }\n    });\n    return pipeline;\n  };\n  /**\n   * Adds new functions to the end of the pipeline.\n   *\n   * Logs a warning if the function has not been registered.\n   *\n   * @param {Function} functions Any number of functions to add to the pipeline.\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.prototype.add = function () {\n    var fns = Array.prototype.slice.call(arguments);\n    fns.forEach(function (fn) {\n      elasticlunr.Pipeline.warnIfFunctionNotRegistered(fn);\n\n      this._queue.push(fn);\n    }, this);\n  };\n  /**\n   * Adds a single function after a function that already exists in the\n   * pipeline.\n   *\n   * Logs a warning if the function has not been registered.\n   * If existingFn is not found, throw an Exception.\n   *\n   * @param {Function} existingFn A function that already exists in the pipeline.\n   * @param {Function} newFn The new function to add to the pipeline.\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.prototype.after = function (existingFn, newFn) {\n    elasticlunr.Pipeline.warnIfFunctionNotRegistered(newFn);\n\n    var pos = this._queue.indexOf(existingFn);\n\n    if (pos === -1) {\n      throw new Error('Cannot find existingFn');\n    }\n\n    this._queue.splice(pos + 1, 0, newFn);\n  };\n  /**\n   * Adds a single function before a function that already exists in the\n   * pipeline.\n   *\n   * Logs a warning if the function has not been registered.\n   * If existingFn is not found, throw an Exception.\n   *\n   * @param {Function} existingFn A function that already exists in the pipeline.\n   * @param {Function} newFn The new function to add to the pipeline.\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.prototype.before = function (existingFn, newFn) {\n    elasticlunr.Pipeline.warnIfFunctionNotRegistered(newFn);\n\n    var pos = this._queue.indexOf(existingFn);\n\n    if (pos === -1) {\n      throw new Error('Cannot find existingFn');\n    }\n\n    this._queue.splice(pos, 0, newFn);\n  };\n  /**\n   * Removes a function from the pipeline.\n   *\n   * @param {Function} fn The function to remove from the pipeline.\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.prototype.remove = function (fn) {\n    var pos = this._queue.indexOf(fn);\n\n    if (pos === -1) {\n      return;\n    }\n\n    this._queue.splice(pos, 1);\n  };\n  /**\n   * Runs the current list of functions that registered in the pipeline against the\n   * input tokens.\n   *\n   * @param {Array} tokens The tokens to run through the pipeline.\n   * @return {Array}\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.prototype.run = function (tokens) {\n    var out = [],\n        tokenLength = tokens.length,\n        pipelineLength = this._queue.length;\n\n    for (var i = 0; i < tokenLength; i++) {\n      var token = tokens[i];\n\n      for (var j = 0; j < pipelineLength; j++) {\n        token = this._queue[j](token, i, tokens);\n        if (token === void 0 || token === null) break;\n      }\n\n      ;\n      if (token !== void 0 && token !== null) out.push(token);\n    }\n\n    ;\n    return out;\n  };\n  /**\n   * Resets the pipeline by removing any existing processors.\n   *\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.prototype.reset = function () {\n    this._queue = [];\n  };\n  /**\n   * Get the pipeline if user want to check the pipeline.\n   *\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.prototype.get = function () {\n    return this._queue;\n  };\n  /**\n   * Returns a representation of the pipeline ready for serialisation.\n   * Only serialize pipeline function's name. Not storing function, so when\n   * loading the archived JSON index file, corresponding pipeline function is \n   * added by registered function of elasticlunr.Pipeline.registeredFunctions\n   *\n   * Logs a warning if the function has not been registered.\n   *\n   * @return {Array}\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.prototype.toJSON = function () {\n    return this._queue.map(function (fn) {\n      elasticlunr.Pipeline.warnIfFunctionNotRegistered(fn);\n      return fn.label;\n    });\n  };\n  /*!\n   * elasticlunr.Index\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * elasticlunr.Index is object that manages a search index.  It contains the indexes\n   * and stores all the tokens and document lookups.  It also provides the main\n   * user facing API for the library.\n   *\n   * @constructor\n   */\n\n\n  elasticlunr.Index = function () {\n    this._fields = [];\n    this._ref = 'id';\n    this.pipeline = new elasticlunr.Pipeline();\n    this.documentStore = new elasticlunr.DocumentStore();\n    this.index = {};\n    this.eventEmitter = new elasticlunr.EventEmitter();\n    this._idfCache = {};\n    this.on('add', 'remove', 'update', function () {\n      this._idfCache = {};\n    }.bind(this));\n  };\n  /**\n   * Bind a handler to events being emitted by the index.\n   *\n   * The handler can be bound to many events at the same time.\n   *\n   * @param {String} [eventName] The name(s) of events to bind the function to.\n   * @param {Function} fn The serialised set to load.\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.on = function () {\n    var args = Array.prototype.slice.call(arguments);\n    return this.eventEmitter.addListener.apply(this.eventEmitter, args);\n  };\n  /**\n   * Removes a handler from an event being emitted by the index.\n   *\n   * @param {String} eventName The name of events to remove the function from.\n   * @param {Function} fn The serialised set to load.\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.off = function (name, fn) {\n    return this.eventEmitter.removeListener(name, fn);\n  };\n  /**\n   * Loads a previously serialised index.\n   *\n   * Issues a warning if the index being imported was serialised\n   * by a different version of elasticlunr.\n   *\n   * @param {Object} serialisedData The serialised set to load.\n   * @return {elasticlunr.Index}\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.load = function (serialisedData) {\n    if (serialisedData.version !== elasticlunr.version) {\n      elasticlunr.utils.warn('version mismatch: current ' + elasticlunr.version + ' importing ' + serialisedData.version);\n    }\n\n    var idx = new this();\n    idx._fields = serialisedData.fields;\n    idx._ref = serialisedData.ref;\n    idx.documentStore = elasticlunr.DocumentStore.load(serialisedData.documentStore);\n    idx.pipeline = elasticlunr.Pipeline.load(serialisedData.pipeline);\n    idx.index = {};\n\n    for (var field in serialisedData.index) {\n      idx.index[field] = elasticlunr.InvertedIndex.load(serialisedData.index[field]);\n    }\n\n    return idx;\n  };\n  /**\n   * Adds a field to the list of fields that will be searchable within documents in the index.\n   *\n   * Remember that inner index is build based on field, which means each field has one inverted index.\n   *\n   * Fields should be added before any documents are added to the index, fields\n   * that are added after documents are added to the index will only apply to new\n   * documents added to the index.\n   *\n   * @param {String} fieldName The name of the field within the document that should be indexed\n   * @return {elasticlunr.Index}\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.addField = function (fieldName) {\n    this._fields.push(fieldName);\n\n    this.index[fieldName] = new elasticlunr.InvertedIndex();\n    return this;\n  };\n  /**\n   * Sets the property used to uniquely identify documents added to the index,\n   * by default this property is 'id'.\n   *\n   * This should only be changed before adding documents to the index, changing\n   * the ref property without resetting the index can lead to unexpected results.\n   *\n   * @param {String} refName The property to use to uniquely identify the\n   * documents in the index.\n   * @param {Boolean} emitEvent Whether to emit add events, defaults to true\n   * @return {elasticlunr.Index}\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.setRef = function (refName) {\n    this._ref = refName;\n    return this;\n  };\n  /**\n   *\n   * Set if the JSON format original documents are save into elasticlunr.DocumentStore\n   *\n   * Defaultly save all the original JSON documents.\n   *\n   * @param {Boolean} save Whether to save the original JSON documents.\n   * @return {elasticlunr.Index}\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.saveDocument = function (save) {\n    this.documentStore = new elasticlunr.DocumentStore(save);\n    return this;\n  };\n  /**\n   * Add a JSON format document to the index.\n   *\n   * This is the way new documents enter the index, this function will run the\n   * fields from the document through the index's pipeline and then add it to\n   * the index, it will then show up in search results.\n   *\n   * An 'add' event is emitted with the document that has been added and the index\n   * the document has been added to. This event can be silenced by passing false\n   * as the second argument to add.\n   *\n   * @param {Object} doc The JSON format document to add to the index.\n   * @param {Boolean} emitEvent Whether or not to emit events, default true.\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.addDoc = function (doc, emitEvent) {\n    if (!doc) return;\n    var emitEvent = emitEvent === undefined ? true : emitEvent;\n    var docRef = doc[this._ref];\n    this.documentStore.addDoc(docRef, doc);\n\n    this._fields.forEach(function (field) {\n      var fieldTokens = this.pipeline.run(elasticlunr.tokenizer(doc[field]));\n      this.documentStore.addFieldLength(docRef, field, fieldTokens.length);\n      var tokenCount = {};\n      fieldTokens.forEach(function (token) {\n        if (token in tokenCount) tokenCount[token] += 1;else tokenCount[token] = 1;\n      }, this);\n\n      for (var token in tokenCount) {\n        var termFrequency = tokenCount[token];\n        termFrequency = Math.sqrt(termFrequency);\n        this.index[field].addToken(token, {\n          ref: docRef,\n          tf: termFrequency\n        });\n      }\n    }, this);\n\n    if (emitEvent) this.eventEmitter.emit('add', doc, this);\n  };\n  /**\n   * Removes a document from the index by doc ref.\n   *\n   * To make sure documents no longer show up in search results they can be\n   * removed from the index using this method.\n   *\n   * A 'remove' event is emitted with the document that has been removed and the index\n   * the document has been removed from. This event can be silenced by passing false\n   * as the second argument to remove.\n   *\n   * If user setting DocumentStore not storing the documents, then remove doc by docRef is not allowed.\n   *\n   * @param {String|Integer} docRef The document ref to remove from the index.\n   * @param {Boolean} emitEvent Whether to emit remove events, defaults to true\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.removeDocByRef = function (docRef, emitEvent) {\n    if (!docRef) return;\n\n    if (this.documentStore.isDocStored() === false) {\n      return;\n    }\n\n    if (!this.documentStore.hasDoc(docRef)) return;\n    var doc = this.documentStore.getDoc(docRef);\n    this.removeDoc(doc, false);\n  };\n  /**\n   * Removes a document from the index.\n   * This remove operation could work even the original doc is not store in the DocumentStore.\n   *\n   * To make sure documents no longer show up in search results they can be\n   * removed from the index using this method.\n   *\n   * A 'remove' event is emitted with the document that has been removed and the index\n   * the document has been removed from. This event can be silenced by passing false\n   * as the second argument to remove.\n   *\n   *\n   * @param {Object} doc The document ref to remove from the index.\n   * @param {Boolean} emitEvent Whether to emit remove events, defaults to true\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.removeDoc = function (doc, emitEvent) {\n    if (!doc) return;\n    var emitEvent = emitEvent === undefined ? true : emitEvent;\n    var docRef = doc[this._ref];\n    if (!this.documentStore.hasDoc(docRef)) return;\n    this.documentStore.removeDoc(docRef);\n\n    this._fields.forEach(function (field) {\n      var fieldTokens = this.pipeline.run(elasticlunr.tokenizer(doc[field]));\n      fieldTokens.forEach(function (token) {\n        this.index[field].removeToken(token, docRef);\n      }, this);\n    }, this);\n\n    if (emitEvent) this.eventEmitter.emit('remove', doc, this);\n  };\n  /**\n   * Updates a document in the index.\n   *\n   * When a document contained within the index gets updated, fields changed,\n   * added or removed, to make sure it correctly matched against search queries,\n   * it should be updated in the index.\n   *\n   * This method is just a wrapper around `remove` and `add`\n   *\n   * An 'update' event is emitted with the document that has been updated and the index.\n   * This event can be silenced by passing false as the second argument to update. Only\n   * an update event will be fired, the 'add' and 'remove' events of the underlying calls\n   * are silenced.\n   *\n   * @param {Object} doc The document to update in the index.\n   * @param {Boolean} emitEvent Whether to emit update events, defaults to true\n   * @see Index.prototype.remove\n   * @see Index.prototype.add\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.updateDoc = function (doc, emitEvent) {\n    var emitEvent = emitEvent === undefined ? true : emitEvent;\n    this.removeDocByRef(doc[this._ref], false);\n    this.addDoc(doc, false);\n    if (emitEvent) this.eventEmitter.emit('update', doc, this);\n  };\n  /**\n   * Calculates the inverse document frequency for a token within the index of a field.\n   *\n   * @param {String} token The token to calculate the idf of.\n   * @param {String} field The field to compute idf.\n   * @see Index.prototype.idf\n   * @private\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.idf = function (term, field) {\n    var cacheKey = \"@\" + field + '/' + term;\n    if (Object.prototype.hasOwnProperty.call(this._idfCache, cacheKey)) return this._idfCache[cacheKey];\n    var df = this.index[field].getDocFreq(term);\n    var idf = 1 + Math.log(this.documentStore.length / (df + 1));\n    this._idfCache[cacheKey] = idf;\n    return idf;\n  };\n  /**\n   * get fields of current index instance\n   *\n   * @return {Array}\n   */\n\n\n  elasticlunr.Index.prototype.getFields = function () {\n    return this._fields.slice();\n  };\n  /**\n   * Searches the index using the passed query.\n   * Queries should be a string, multiple words are allowed.\n   *\n   * If config is null, will search all fields defaultly, and lead to OR based query.\n   * If config is specified, will search specified with query time boosting.\n   *\n   * All query tokens are passed through the same pipeline that document tokens\n   * are passed through, so any language processing involved will be run on every\n   * query term.\n   *\n   * Each query term is expanded, so that the term 'he' might be expanded to\n   * 'hello' and 'help' if those terms were already included in the index.\n   *\n   * Matching documents are returned as an array of objects, each object contains\n   * the matching document ref, as set for this index, and the similarity score\n   * for this document against the query.\n   *\n   * @param {String} query The query to search the index with.\n   * @param {JSON} userConfig The user query config, JSON format.\n   * @return {Object}\n   * @see Index.prototype.idf\n   * @see Index.prototype.documentVector\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.search = function (query, userConfig) {\n    if (!query) return [];\n    var configStr = null;\n\n    if (userConfig != null) {\n      configStr = JSON.stringify(userConfig);\n    }\n\n    var config = new elasticlunr.Configuration(configStr, this.getFields()).get();\n    var queryTokens = this.pipeline.run(elasticlunr.tokenizer(query));\n    var queryResults = {};\n\n    for (var field in config) {\n      var fieldSearchResults = this.fieldSearch(queryTokens, field, config);\n      var fieldBoost = config[field].boost;\n\n      for (var docRef in fieldSearchResults) {\n        fieldSearchResults[docRef] = fieldSearchResults[docRef] * fieldBoost;\n      }\n\n      for (var docRef in fieldSearchResults) {\n        if (docRef in queryResults) {\n          queryResults[docRef] += fieldSearchResults[docRef];\n        } else {\n          queryResults[docRef] = fieldSearchResults[docRef];\n        }\n      }\n    }\n\n    var results = [];\n\n    for (var docRef in queryResults) {\n      results.push({\n        ref: docRef,\n        score: queryResults[docRef]\n      });\n    }\n\n    results.sort(function (a, b) {\n      return b.score - a.score;\n    });\n    return results;\n  };\n  /**\n   * search queryTokens in specified field.\n   *\n   * @param {Array} queryTokens The query tokens to query in this field.\n   * @param {String} field Field to query in.\n   * @param {elasticlunr.Configuration} config The user query config, JSON format.\n   * @return {Object}\n   */\n\n\n  elasticlunr.Index.prototype.fieldSearch = function (queryTokens, fieldName, config) {\n    var booleanType = config[fieldName].bool;\n    var expand = config[fieldName].expand;\n    var boost = config[fieldName].boost;\n    var scores = null;\n    var docTokens = {}; // Do nothing if the boost is 0\n\n    if (boost === 0) {\n      return;\n    }\n\n    queryTokens.forEach(function (token) {\n      var tokens = [token];\n\n      if (expand == true) {\n        tokens = this.index[fieldName].expandToken(token);\n      } // Consider every query token in turn. If expanded, each query token\n      // corresponds to a set of tokens, which is all tokens in the \n      // index matching the pattern queryToken* .\n      // For the set of tokens corresponding to a query token, find and score\n      // all matching documents. Store those scores in queryTokenScores, \n      // keyed by docRef.\n      // Then, depending on the value of booleanType, combine the scores\n      // for this query token with previous scores.  If booleanType is OR,\n      // then merge the scores by summing into the accumulated total, adding\n      // new document scores are required (effectively a union operator). \n      // If booleanType is AND, accumulate scores only if the document \n      // has previously been scored by another query token (an intersection\n      // operation0. \n      // Furthermore, since when booleanType is AND, additional \n      // query tokens can't add new documents to the result set, use the\n      // current document set to limit the processing of each new query \n      // token for efficiency (i.e., incremental intersection).\n\n\n      var queryTokenScores = {};\n      tokens.forEach(function (key) {\n        var docs = this.index[fieldName].getDocs(key);\n        var idf = this.idf(key, fieldName);\n\n        if (scores && booleanType == 'AND') {\n          // special case, we can rule out documents that have been\n          // already been filtered out because they weren't scored\n          // by previous query token passes.\n          var filteredDocs = {};\n\n          for (var docRef in scores) {\n            if (docRef in docs) {\n              filteredDocs[docRef] = docs[docRef];\n            }\n          }\n\n          docs = filteredDocs;\n        } // only record appeared token for retrieved documents for the\n        // original token, not for expaned token.\n        // beause for doing coordNorm for a retrieved document, coordNorm only care how many\n        // query token appear in that document.\n        // so expanded token should not be added into docTokens, if added, this will pollute the\n        // coordNorm\n\n\n        if (key == token) {\n          this.fieldSearchStats(docTokens, key, docs);\n        }\n\n        for (var docRef in docs) {\n          var tf = this.index[fieldName].getTermFrequency(key, docRef);\n          var fieldLength = this.documentStore.getFieldLength(docRef, fieldName);\n          var fieldLengthNorm = 1;\n\n          if (fieldLength != 0) {\n            fieldLengthNorm = 1 / Math.sqrt(fieldLength);\n          }\n\n          var penality = 1;\n\n          if (key != token) {\n            // currently I'm not sure if this penality is enough,\n            // need to do verification\n            penality = (1 - (key.length - token.length) / key.length) * 0.15;\n          }\n\n          var score = tf * idf * fieldLengthNorm * penality;\n\n          if (docRef in queryTokenScores) {\n            queryTokenScores[docRef] += score;\n          } else {\n            queryTokenScores[docRef] = score;\n          }\n        }\n      }, this);\n      scores = this.mergeScores(scores, queryTokenScores, booleanType);\n    }, this);\n    scores = this.coordNorm(scores, docTokens, queryTokens.length);\n    return scores;\n  };\n  /**\n   * Merge the scores from one set of tokens into an accumulated score table.\n   * Exact operation depends on the op parameter. If op is 'AND', then only the\n   * intersection of the two score lists is retained. Otherwise, the union of\n   * the two score lists is returned. For internal use only.\n   *\n   * @param {Object} bool accumulated scores. Should be null on first call.\n   * @param {String} scores new scores to merge into accumScores.\n   * @param {Object} op merge operation (should be 'AND' or 'OR').\n   *\n   */\n\n\n  elasticlunr.Index.prototype.mergeScores = function (accumScores, scores, op) {\n    if (!accumScores) {\n      return scores;\n    }\n\n    if (op == 'AND') {\n      var intersection = {};\n\n      for (var docRef in scores) {\n        if (docRef in accumScores) {\n          intersection[docRef] = accumScores[docRef] + scores[docRef];\n        }\n      }\n\n      return intersection;\n    } else {\n      for (var docRef in scores) {\n        if (docRef in accumScores) {\n          accumScores[docRef] += scores[docRef];\n        } else {\n          accumScores[docRef] = scores[docRef];\n        }\n      }\n\n      return accumScores;\n    }\n  };\n  /**\n   * Record the occuring query token of retrieved doc specified by doc field.\n   * Only for inner user.\n   *\n   * @param {Object} docTokens a data structure stores which token appears in the retrieved doc.\n   * @param {String} token query token\n   * @param {Object} docs the retrieved documents of the query token\n   *\n   */\n\n\n  elasticlunr.Index.prototype.fieldSearchStats = function (docTokens, token, docs) {\n    for (var doc in docs) {\n      if (doc in docTokens) {\n        docTokens[doc].push(token);\n      } else {\n        docTokens[doc] = [token];\n      }\n    }\n  };\n  /**\n   * coord norm the score of a doc.\n   * if a doc contain more query tokens, then the score will larger than the doc\n   * contains less query tokens.\n   *\n   * only for inner use.\n   *\n   * @param {Object} results first results\n   * @param {Object} docs field search results of a token\n   * @param {Integer} n query token number\n   * @return {Object}\n   */\n\n\n  elasticlunr.Index.prototype.coordNorm = function (scores, docTokens, n) {\n    for (var doc in scores) {\n      if (!(doc in docTokens)) continue;\n      var tokens = docTokens[doc].length;\n      scores[doc] = scores[doc] * tokens / n;\n    }\n\n    return scores;\n  };\n  /**\n   * Returns a representation of the index ready for serialisation.\n   *\n   * @return {Object}\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.toJSON = function () {\n    var indexJson = {};\n\n    this._fields.forEach(function (field) {\n      indexJson[field] = this.index[field].toJSON();\n    }, this);\n\n    return {\n      version: elasticlunr.version,\n      fields: this._fields,\n      ref: this._ref,\n      documentStore: this.documentStore.toJSON(),\n      index: indexJson,\n      pipeline: this.pipeline.toJSON()\n    };\n  };\n  /**\n   * Applies a plugin to the current index.\n   *\n   * A plugin is a function that is called with the index as its context.\n   * Plugins can be used to customise or extend the behaviour the index\n   * in some way. A plugin is just a function, that encapsulated the custom\n   * behaviour that should be applied to the index.\n   *\n   * The plugin function will be called with the index as its argument, additional\n   * arguments can also be passed when calling use. The function will be called\n   * with the index as its context.\n   *\n   * Example:\n   *\n   *     var myPlugin = function (idx, arg1, arg2) {\n   *       // `this` is the index to be extended\n   *       // apply any extensions etc here.\n   *     }\n   *\n   *     var idx = elasticlunr(function () {\n   *       this.use(myPlugin, 'arg1', 'arg2')\n   *     })\n   *\n   * @param {Function} plugin The plugin to apply.\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.use = function (plugin) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    args.unshift(this);\n    plugin.apply(this, args);\n  };\n  /*!\n   * elasticlunr.DocumentStore\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * elasticlunr.DocumentStore is a simple key-value document store used for storing sets of tokens for\n   * documents stored in index.\n   *\n   * elasticlunr.DocumentStore store original JSON format documents that you could build search snippet by this original JSON document.\n   *\n   * user could choose whether original JSON format document should be store, if no configuration then document will be stored defaultly.\n   * If user care more about the index size, user could select not store JSON documents, then this will has some defects, such as user\n   * could not use JSON document to generate snippets of search results.\n   *\n   * @param {Boolean} save If the original JSON document should be stored.\n   * @constructor\n   * @module\n   */\n\n\n  elasticlunr.DocumentStore = function (save) {\n    if (save === null || save === undefined) {\n      this._save = true;\n    } else {\n      this._save = save;\n    }\n\n    this.docs = {};\n    this.docInfo = {};\n    this.length = 0;\n  };\n  /**\n   * Loads a previously serialised document store\n   *\n   * @param {Object} serialisedData The serialised document store to load.\n   * @return {elasticlunr.DocumentStore}\n   */\n\n\n  elasticlunr.DocumentStore.load = function (serialisedData) {\n    var store = new this();\n    store.length = serialisedData.length;\n    store.docs = serialisedData.docs;\n    store.docInfo = serialisedData.docInfo;\n    store._save = serialisedData.save;\n    return store;\n  };\n  /**\n   * check if current instance store the original doc\n   *\n   * @return {Boolean}\n   */\n\n\n  elasticlunr.DocumentStore.prototype.isDocStored = function () {\n    return this._save;\n  };\n  /**\n   * Stores the given doc in the document store against the given id.\n   * If docRef already exist, then update doc.\n   *\n   * Document is store by original JSON format, then you could use original document to generate search snippets.\n   *\n   * @param {Integer|String} docRef The key used to store the JSON format doc.\n   * @param {Object} doc The JSON format doc.\n   */\n\n\n  elasticlunr.DocumentStore.prototype.addDoc = function (docRef, doc) {\n    if (!this.hasDoc(docRef)) this.length++;\n\n    if (this._save === true) {\n      this.docs[docRef] = clone(doc);\n    } else {\n      this.docs[docRef] = null;\n    }\n  };\n  /**\n   * Retrieves the JSON doc from the document store for a given key.\n   *\n   * If docRef not found, return null.\n   * If user set not storing the documents, return null.\n   *\n   * @param {Integer|String} docRef The key to lookup and retrieve from the document store.\n   * @return {Object}\n   * @memberOf DocumentStore\n   */\n\n\n  elasticlunr.DocumentStore.prototype.getDoc = function (docRef) {\n    if (this.hasDoc(docRef) === false) return null;\n    return this.docs[docRef];\n  };\n  /**\n   * Checks whether the document store contains a key (docRef).\n   *\n   * @param {Integer|String} docRef The id to look up in the document store.\n   * @return {Boolean}\n   * @memberOf DocumentStore\n   */\n\n\n  elasticlunr.DocumentStore.prototype.hasDoc = function (docRef) {\n    return docRef in this.docs;\n  };\n  /**\n   * Removes the value for a key in the document store.\n   *\n   * @param {Integer|String} docRef The id to remove from the document store.\n   * @memberOf DocumentStore\n   */\n\n\n  elasticlunr.DocumentStore.prototype.removeDoc = function (docRef) {\n    if (!this.hasDoc(docRef)) return;\n    delete this.docs[docRef];\n    delete this.docInfo[docRef];\n    this.length--;\n  };\n  /**\n   * Add field length of a document's field tokens from pipeline results.\n   * The field length of a document is used to do field length normalization even without the original JSON document stored.\n   *\n   * @param {Integer|String} docRef document's id or reference\n   * @param {String} fieldName field name\n   * @param {Integer} length field length\n   */\n\n\n  elasticlunr.DocumentStore.prototype.addFieldLength = function (docRef, fieldName, length) {\n    if (docRef === null || docRef === undefined) return;\n    if (this.hasDoc(docRef) == false) return;\n    if (!this.docInfo[docRef]) this.docInfo[docRef] = {};\n    this.docInfo[docRef][fieldName] = length;\n  };\n  /**\n   * Update field length of a document's field tokens from pipeline results.\n   * The field length of a document is used to do field length normalization even without the original JSON document stored.\n   *\n   * @param {Integer|String} docRef document's id or reference\n   * @param {String} fieldName field name\n   * @param {Integer} length field length\n   */\n\n\n  elasticlunr.DocumentStore.prototype.updateFieldLength = function (docRef, fieldName, length) {\n    if (docRef === null || docRef === undefined) return;\n    if (this.hasDoc(docRef) == false) return;\n    this.addFieldLength(docRef, fieldName, length);\n  };\n  /**\n   * get field length of a document by docRef\n   *\n   * @param {Integer|String} docRef document id or reference\n   * @param {String} fieldName field name\n   * @return {Integer} field length\n   */\n\n\n  elasticlunr.DocumentStore.prototype.getFieldLength = function (docRef, fieldName) {\n    if (docRef === null || docRef === undefined) return 0;\n    if (!(docRef in this.docs)) return 0;\n    if (!(fieldName in this.docInfo[docRef])) return 0;\n    return this.docInfo[docRef][fieldName];\n  };\n  /**\n   * Returns a JSON representation of the document store used for serialisation.\n   *\n   * @return {Object} JSON format\n   * @memberOf DocumentStore\n   */\n\n\n  elasticlunr.DocumentStore.prototype.toJSON = function () {\n    return {\n      docs: this.docs,\n      docInfo: this.docInfo,\n      length: this.length,\n      save: this._save\n    };\n  };\n  /**\n   * Cloning object\n   *\n   * @param {Object} object in JSON format\n   * @return {Object} copied object\n   */\n\n\n  function clone(obj) {\n    if (null === obj || \"object\" !== typeof obj) return obj;\n    var copy = obj.constructor();\n\n    for (var attr in obj) {\n      if (obj.hasOwnProperty(attr)) copy[attr] = obj[attr];\n    }\n\n    return copy;\n  }\n  /*!\n   * elasticlunr.stemmer\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   * Includes code from - http://tartarus.org/~martin/PorterStemmer/js.txt\n   */\n\n  /**\n   * elasticlunr.stemmer is an english language stemmer, this is a JavaScript\n   * implementation of the PorterStemmer taken from http://tartarus.org/~martin\n   *\n   * @module\n   * @param {String} str The string to stem\n   * @return {String}\n   * @see elasticlunr.Pipeline\n   */\n\n\n  elasticlunr.stemmer = function () {\n    var step2list = {\n      \"ational\": \"ate\",\n      \"tional\": \"tion\",\n      \"enci\": \"ence\",\n      \"anci\": \"ance\",\n      \"izer\": \"ize\",\n      \"bli\": \"ble\",\n      \"alli\": \"al\",\n      \"entli\": \"ent\",\n      \"eli\": \"e\",\n      \"ousli\": \"ous\",\n      \"ization\": \"ize\",\n      \"ation\": \"ate\",\n      \"ator\": \"ate\",\n      \"alism\": \"al\",\n      \"iveness\": \"ive\",\n      \"fulness\": \"ful\",\n      \"ousness\": \"ous\",\n      \"aliti\": \"al\",\n      \"iviti\": \"ive\",\n      \"biliti\": \"ble\",\n      \"logi\": \"log\"\n    },\n        step3list = {\n      \"icate\": \"ic\",\n      \"ative\": \"\",\n      \"alize\": \"al\",\n      \"iciti\": \"ic\",\n      \"ical\": \"ic\",\n      \"ful\": \"\",\n      \"ness\": \"\"\n    },\n        c = \"[^aeiou]\",\n        // consonant\n    v = \"[aeiouy]\",\n        // vowel\n    C = c + \"[^aeiouy]*\",\n        // consonant sequence\n    V = v + \"[aeiou]*\",\n        // vowel sequence\n    mgr0 = \"^(\" + C + \")?\" + V + C,\n        // [C]VC... is m>0\n    meq1 = \"^(\" + C + \")?\" + V + C + \"(\" + V + \")?$\",\n        // [C]VC[V] is m=1\n    mgr1 = \"^(\" + C + \")?\" + V + C + V + C,\n        // [C]VCVC... is m>1\n    s_v = \"^(\" + C + \")?\" + v; // vowel in stem\n\n    var re_mgr0 = new RegExp(mgr0);\n    var re_mgr1 = new RegExp(mgr1);\n    var re_meq1 = new RegExp(meq1);\n    var re_s_v = new RegExp(s_v);\n    var re_1a = /^(.+?)(ss|i)es$/;\n    var re2_1a = /^(.+?)([^s])s$/;\n    var re_1b = /^(.+?)eed$/;\n    var re2_1b = /^(.+?)(ed|ing)$/;\n    var re_1b_2 = /.$/;\n    var re2_1b_2 = /(at|bl|iz)$/;\n    var re3_1b_2 = new RegExp(\"([^aeiouylsz])\\\\1$\");\n    var re4_1b_2 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n    var re_1c = /^(.+?[^aeiou])y$/;\n    var re_2 = /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/;\n    var re_3 = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/;\n    var re_4 = /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/;\n    var re2_4 = /^(.+?)(s|t)(ion)$/;\n    var re_5 = /^(.+?)e$/;\n    var re_5_1 = /ll$/;\n    var re3_5 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n\n    var porterStemmer = function porterStemmer(w) {\n      var stem, suffix, firstch, re, re2, re3, re4;\n\n      if (w.length < 3) {\n        return w;\n      }\n\n      firstch = w.substr(0, 1);\n\n      if (firstch == \"y\") {\n        w = firstch.toUpperCase() + w.substr(1);\n      } // Step 1a\n\n\n      re = re_1a;\n      re2 = re2_1a;\n\n      if (re.test(w)) {\n        w = w.replace(re, \"$1$2\");\n      } else if (re2.test(w)) {\n        w = w.replace(re2, \"$1$2\");\n      } // Step 1b\n\n\n      re = re_1b;\n      re2 = re2_1b;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        re = re_mgr0;\n\n        if (re.test(fp[1])) {\n          re = re_1b_2;\n          w = w.replace(re, \"\");\n        }\n      } else if (re2.test(w)) {\n        var fp = re2.exec(w);\n        stem = fp[1];\n        re2 = re_s_v;\n\n        if (re2.test(stem)) {\n          w = stem;\n          re2 = re2_1b_2;\n          re3 = re3_1b_2;\n          re4 = re4_1b_2;\n\n          if (re2.test(w)) {\n            w = w + \"e\";\n          } else if (re3.test(w)) {\n            re = re_1b_2;\n            w = w.replace(re, \"\");\n          } else if (re4.test(w)) {\n            w = w + \"e\";\n          }\n        }\n      } // Step 1c - replace suffix y or Y by i if preceded by a non-vowel which is not the first letter of the word (so cry -> cri, by -> by, say -> say)\n\n\n      re = re_1c;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        w = stem + \"i\";\n      } // Step 2\n\n\n      re = re_2;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        suffix = fp[2];\n        re = re_mgr0;\n\n        if (re.test(stem)) {\n          w = stem + step2list[suffix];\n        }\n      } // Step 3\n\n\n      re = re_3;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        suffix = fp[2];\n        re = re_mgr0;\n\n        if (re.test(stem)) {\n          w = stem + step3list[suffix];\n        }\n      } // Step 4\n\n\n      re = re_4;\n      re2 = re2_4;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        re = re_mgr1;\n\n        if (re.test(stem)) {\n          w = stem;\n        }\n      } else if (re2.test(w)) {\n        var fp = re2.exec(w);\n        stem = fp[1] + fp[2];\n        re2 = re_mgr1;\n\n        if (re2.test(stem)) {\n          w = stem;\n        }\n      } // Step 5\n\n\n      re = re_5;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        re = re_mgr1;\n        re2 = re_meq1;\n        re3 = re3_5;\n\n        if (re.test(stem) || re2.test(stem) && !re3.test(stem)) {\n          w = stem;\n        }\n      }\n\n      re = re_5_1;\n      re2 = re_mgr1;\n\n      if (re.test(w) && re2.test(w)) {\n        re = re_1b_2;\n        w = w.replace(re, \"\");\n      } // and turn initial Y back to y\n\n\n      if (firstch == \"y\") {\n        w = firstch.toLowerCase() + w.substr(1);\n      }\n\n      return w;\n    };\n\n    return porterStemmer;\n  }();\n\n  elasticlunr.Pipeline.registerFunction(elasticlunr.stemmer, 'stemmer');\n  /*!\n   * elasticlunr.stopWordFilter\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * elasticlunr.stopWordFilter is an English language stop words filter, any words\n   * contained in the stop word list will not be passed through the filter.\n   *\n   * This is intended to be used in the Pipeline. If the token does not pass the\n   * filter then undefined will be returned.\n   * Currently this StopwordFilter using dictionary to do O(1) time complexity stop word filtering.\n   *\n   * @module\n   * @param {String} token The token to pass through the filter\n   * @return {String}\n   * @see elasticlunr.Pipeline\n   */\n\n  elasticlunr.stopWordFilter = function (token) {\n    if (token && elasticlunr.stopWordFilter.stopWords[token] !== true) {\n      return token;\n    }\n  };\n  /**\n   * Remove predefined stop words\n   * if user want to use customized stop words, user could use this function to delete\n   * all predefined stopwords.\n   *\n   * @return {null}\n   */\n\n\n  elasticlunr.clearStopWords = function () {\n    elasticlunr.stopWordFilter.stopWords = {};\n  };\n  /**\n   * Add customized stop words\n   * user could use this function to add customized stop words\n   * \n   * @params {Array} words customized stop words\n   * @return {null}\n   */\n\n\n  elasticlunr.addStopWords = function (words) {\n    if (words == null || Array.isArray(words) === false) return;\n    words.forEach(function (word) {\n      elasticlunr.stopWordFilter.stopWords[word] = true;\n    }, this);\n  };\n  /**\n   * Reset to default stop words\n   * user could use this function to restore default stop words\n   *\n   * @return {null}\n   */\n\n\n  elasticlunr.resetStopWords = function () {\n    elasticlunr.stopWordFilter.stopWords = elasticlunr.defaultStopWords;\n  };\n\n  elasticlunr.defaultStopWords = {\n    \"\": true,\n    \"a\": true,\n    \"able\": true,\n    \"about\": true,\n    \"across\": true,\n    \"after\": true,\n    \"all\": true,\n    \"almost\": true,\n    \"also\": true,\n    \"am\": true,\n    \"among\": true,\n    \"an\": true,\n    \"and\": true,\n    \"any\": true,\n    \"are\": true,\n    \"as\": true,\n    \"at\": true,\n    \"be\": true,\n    \"because\": true,\n    \"been\": true,\n    \"but\": true,\n    \"by\": true,\n    \"can\": true,\n    \"cannot\": true,\n    \"could\": true,\n    \"dear\": true,\n    \"did\": true,\n    \"do\": true,\n    \"does\": true,\n    \"either\": true,\n    \"else\": true,\n    \"ever\": true,\n    \"every\": true,\n    \"for\": true,\n    \"from\": true,\n    \"get\": true,\n    \"got\": true,\n    \"had\": true,\n    \"has\": true,\n    \"have\": true,\n    \"he\": true,\n    \"her\": true,\n    \"hers\": true,\n    \"him\": true,\n    \"his\": true,\n    \"how\": true,\n    \"however\": true,\n    \"i\": true,\n    \"if\": true,\n    \"in\": true,\n    \"into\": true,\n    \"is\": true,\n    \"it\": true,\n    \"its\": true,\n    \"just\": true,\n    \"least\": true,\n    \"let\": true,\n    \"like\": true,\n    \"likely\": true,\n    \"may\": true,\n    \"me\": true,\n    \"might\": true,\n    \"most\": true,\n    \"must\": true,\n    \"my\": true,\n    \"neither\": true,\n    \"no\": true,\n    \"nor\": true,\n    \"not\": true,\n    \"of\": true,\n    \"off\": true,\n    \"often\": true,\n    \"on\": true,\n    \"only\": true,\n    \"or\": true,\n    \"other\": true,\n    \"our\": true,\n    \"own\": true,\n    \"rather\": true,\n    \"said\": true,\n    \"say\": true,\n    \"says\": true,\n    \"she\": true,\n    \"should\": true,\n    \"since\": true,\n    \"so\": true,\n    \"some\": true,\n    \"than\": true,\n    \"that\": true,\n    \"the\": true,\n    \"their\": true,\n    \"them\": true,\n    \"then\": true,\n    \"there\": true,\n    \"these\": true,\n    \"they\": true,\n    \"this\": true,\n    \"tis\": true,\n    \"to\": true,\n    \"too\": true,\n    \"twas\": true,\n    \"us\": true,\n    \"wants\": true,\n    \"was\": true,\n    \"we\": true,\n    \"were\": true,\n    \"what\": true,\n    \"when\": true,\n    \"where\": true,\n    \"which\": true,\n    \"while\": true,\n    \"who\": true,\n    \"whom\": true,\n    \"why\": true,\n    \"will\": true,\n    \"with\": true,\n    \"would\": true,\n    \"yet\": true,\n    \"you\": true,\n    \"your\": true\n  };\n  elasticlunr.stopWordFilter.stopWords = elasticlunr.defaultStopWords;\n  elasticlunr.Pipeline.registerFunction(elasticlunr.stopWordFilter, 'stopWordFilter');\n  /*!\n   * elasticlunr.trimmer\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * elasticlunr.trimmer is a pipeline function for trimming non word\n   * characters from the begining and end of tokens before they\n   * enter the index.\n   *\n   * This implementation may not work correctly for non latin\n   * characters and should either be removed or adapted for use\n   * with languages with non-latin characters.\n   *\n   * @module\n   * @param {String} token The token to pass through the filter\n   * @return {String}\n   * @see elasticlunr.Pipeline\n   */\n\n  elasticlunr.trimmer = function (token) {\n    if (token === null || token === undefined) {\n      throw new Error('token should not be undefined');\n    }\n\n    return token.replace(/^\\W+/, '').replace(/\\W+$/, '');\n  };\n\n  elasticlunr.Pipeline.registerFunction(elasticlunr.trimmer, 'trimmer');\n  /*!\n   * elasticlunr.InvertedIndex\n   * Copyright (C) 2016 Wei Song\n   * Includes code from - http://tartarus.org/~martin/PorterStemmer/js.txt\n   */\n\n  /**\n   * elasticlunr.InvertedIndex is used for efficiently storing and\n   * lookup of documents that contain a given token.\n   *\n   * @constructor\n   */\n\n  elasticlunr.InvertedIndex = function () {\n    this.root = {\n      docs: {},\n      df: 0\n    };\n  };\n  /**\n   * Loads a previously serialised inverted index.\n   *\n   * @param {Object} serialisedData The serialised inverted index to load.\n   * @return {elasticlunr.InvertedIndex}\n   */\n\n\n  elasticlunr.InvertedIndex.load = function (serialisedData) {\n    var idx = new this();\n    idx.root = serialisedData.root;\n    return idx;\n  };\n  /**\n   * Adds a {token: tokenInfo} pair to the inverted index.\n   * If the token already exist, then update the tokenInfo.\n   *\n   * tokenInfo format: { ref: 1, tf: 2}\n   * tokenInfor should contains the document's ref and the tf(token frequency) of that token in\n   * the document.\n   *\n   * By default this function starts at the root of the current inverted index, however\n   * it can start at any node of the inverted index if required.\n   *\n   * @param {String} token \n   * @param {Object} tokenInfo format: { ref: 1, tf: 2}\n   * @param {Object} root An optional node at which to start looking for the\n   * correct place to enter the doc, by default the root of this elasticlunr.InvertedIndex\n   * is used.\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.addToken = function (token, tokenInfo, root) {\n    var root = root || this.root,\n        idx = 0;\n\n    while (idx <= token.length - 1) {\n      var key = token[idx];\n      if (!(key in root)) root[key] = {\n        docs: {},\n        df: 0\n      };\n      idx += 1;\n      root = root[key];\n    }\n\n    var docRef = tokenInfo.ref;\n\n    if (!root.docs[docRef]) {\n      // if this doc not exist, then add this doc\n      root.docs[docRef] = {\n        tf: tokenInfo.tf\n      };\n      root.df += 1;\n    } else {\n      // if this doc already exist, then update tokenInfo\n      root.docs[docRef] = {\n        tf: tokenInfo.tf\n      };\n    }\n  };\n  /**\n   * Checks whether a token is in this elasticlunr.InvertedIndex.\n   * \n   *\n   * @param {String} token The token to be checked\n   * @return {Boolean}\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.hasToken = function (token) {\n    if (!token) return false;\n    var node = this.root;\n\n    for (var i = 0; i < token.length; i++) {\n      if (!node[token[i]]) return false;\n      node = node[token[i]];\n    }\n\n    return true;\n  };\n  /**\n   * Retrieve a node from the inverted index for a given token.\n   * If token not found in this InvertedIndex, return null.\n   * \n   *\n   * @param {String} token The token to get the node for.\n   * @return {Object}\n   * @see InvertedIndex.prototype.get\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.getNode = function (token) {\n    if (!token) return null;\n    var node = this.root;\n\n    for (var i = 0; i < token.length; i++) {\n      if (!node[token[i]]) return null;\n      node = node[token[i]];\n    }\n\n    return node;\n  };\n  /**\n   * Retrieve the documents of a given token.\n   * If token not found, return {}.\n   *\n   *\n   * @param {String} token The token to get the documents for.\n   * @return {Object}\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.getDocs = function (token) {\n    var node = this.getNode(token);\n\n    if (node == null) {\n      return {};\n    }\n\n    return node.docs;\n  };\n  /**\n   * Retrieve term frequency of given token in given docRef.\n   * If token or docRef not found, return 0.\n   *\n   *\n   * @param {String} token The token to get the documents for.\n   * @param {String|Integer} docRef\n   * @return {Integer}\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.getTermFrequency = function (token, docRef) {\n    var node = this.getNode(token);\n\n    if (node == null) {\n      return 0;\n    }\n\n    if (!(docRef in node.docs)) {\n      return 0;\n    }\n\n    return node.docs[docRef].tf;\n  };\n  /**\n   * Retrieve the document frequency of given token.\n   * If token not found, return 0.\n   *\n   *\n   * @param {String} token The token to get the documents for.\n   * @return {Object}\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.getDocFreq = function (token) {\n    var node = this.getNode(token);\n\n    if (node == null) {\n      return 0;\n    }\n\n    return node.df;\n  };\n  /**\n   * Remove the document identified by document's ref from the token in the inverted index.\n   *\n   *\n   * @param {String} token Remove the document from which token.\n   * @param {String} ref The ref of the document to remove from given token.\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.removeToken = function (token, ref) {\n    if (!token) return;\n    var node = this.getNode(token);\n    if (node == null) return;\n\n    if (ref in node.docs) {\n      delete node.docs[ref];\n      node.df -= 1;\n    }\n  };\n  /**\n   * Find all the possible suffixes of given token using tokens currently in the inverted index.\n   * If token not found, return empty Array.\n   *\n   * @param {String} token The token to expand.\n   * @return {Array}\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.expandToken = function (token, memo, root) {\n    if (token == null || token == '') return [];\n    var memo = memo || [];\n\n    if (root == void 0) {\n      root = this.getNode(token);\n      if (root == null) return memo;\n    }\n\n    if (root.df > 0) memo.push(token);\n\n    for (var key in root) {\n      if (key === 'docs') continue;\n      if (key === 'df') continue;\n      this.expandToken(token + key, memo, root[key]);\n    }\n\n    return memo;\n  };\n  /**\n   * Returns a representation of the inverted index ready for serialisation.\n   *\n   * @return {Object}\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.toJSON = function () {\n    return {\n      root: this.root\n    };\n  };\n  /*!\n   * elasticlunr.Configuration\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /** \n   * elasticlunr.Configuration is used to analyze the user search configuration.\n   * \n   * By elasticlunr.Configuration user could set query-time boosting, boolean model in each field.\n   * \n   * Currently configuration supports:\n   * 1. query-time boosting, user could set how to boost each field.\n   * 2. boolean model chosing, user could choose which boolean model to use for each field.\n   * 3. token expandation, user could set token expand to True to improve Recall. Default is False.\n   * \n   * Query time boosting must be configured by field category, \"boolean\" model could be configured \n   * by both field category or globally as the following example. Field configuration for \"boolean\"\n   * will overwrite global configuration.\n   * Token expand could be configured both by field category or golbally. Local field configuration will\n   * overwrite global configuration.\n   * \n   * configuration example:\n   * {\n   *   fields:{ \n   *     title: {boost: 2},\n   *     body: {boost: 1}\n   *   },\n   *   bool: \"OR\"\n   * }\n   * \n   * \"bool\" field configuation overwrite global configuation example:\n   * {\n   *   fields:{ \n   *     title: {boost: 2, bool: \"AND\"},\n   *     body: {boost: 1}\n   *   },\n   *   bool: \"OR\"\n   * }\n   * \n   * \"expand\" example:\n   * {\n   *   fields:{ \n   *     title: {boost: 2, bool: \"AND\"},\n   *     body: {boost: 1}\n   *   },\n   *   bool: \"OR\",\n   *   expand: true\n   * }\n   * \n   * \"expand\" example for field category:\n   * {\n   *   fields:{ \n   *     title: {boost: 2, bool: \"AND\", expand: true},\n   *     body: {boost: 1}\n   *   },\n   *   bool: \"OR\"\n   * }\n   * \n   * setting the boost to 0 ignores the field (this will only search the title):\n   * {\n   *   fields:{\n   *     title: {boost: 1},\n   *     body: {boost: 0}\n   *   }\n   * }\n   *\n   * then, user could search with configuration to do query-time boosting.\n   * idx.search('oracle database', {fields: {title: {boost: 2}, body: {boost: 1}}});\n   * \n   * \n   * @constructor\n   * \n   * @param {String} config user configuration\n   * @param {Array} fields fields of index instance\n   * @module\n   */\n\n\n  elasticlunr.Configuration = function (config, fields) {\n    var config = config || '';\n\n    if (fields == undefined || fields == null) {\n      throw new Error('fields should not be null');\n    }\n\n    this.config = {};\n    var userConfig;\n\n    try {\n      userConfig = JSON.parse(config);\n      this.buildUserConfig(userConfig, fields);\n    } catch (error) {\n      elasticlunr.utils.warn('user configuration parse failed, will use default configuration');\n      this.buildDefaultConfig(fields);\n    }\n  };\n  /**\n   * Build default search configuration.\n   * \n   * @param {Array} fields fields of index instance\n   */\n\n\n  elasticlunr.Configuration.prototype.buildDefaultConfig = function (fields) {\n    this.reset();\n    fields.forEach(function (field) {\n      this.config[field] = {\n        boost: 1,\n        bool: \"OR\",\n        expand: false\n      };\n    }, this);\n  };\n  /**\n   * Build user configuration.\n   * \n   * @param {JSON} config User JSON configuratoin\n   * @param {Array} fields fields of index instance\n   */\n\n\n  elasticlunr.Configuration.prototype.buildUserConfig = function (config, fields) {\n    var global_bool = \"OR\";\n    var global_expand = false;\n    this.reset();\n\n    if ('bool' in config) {\n      global_bool = config['bool'] || global_bool;\n    }\n\n    if ('expand' in config) {\n      global_expand = config['expand'] || global_expand;\n    }\n\n    if ('fields' in config) {\n      for (var field in config['fields']) {\n        if (fields.indexOf(field) > -1) {\n          var field_config = config['fields'][field];\n          var field_expand = global_expand;\n\n          if (field_config.expand != undefined) {\n            field_expand = field_config.expand;\n          }\n\n          this.config[field] = {\n            boost: field_config.boost || field_config.boost === 0 ? field_config.boost : 1,\n            bool: field_config.bool || global_bool,\n            expand: field_expand\n          };\n        } else {\n          elasticlunr.utils.warn('field name in user configuration not found in index instance fields');\n        }\n      }\n    } else {\n      this.addAllFields2UserConfig(global_bool, global_expand, fields);\n    }\n  };\n  /**\n   * Add all fields to user search configuration.\n   * \n   * @param {String} bool Boolean model\n   * @param {String} expand Expand model\n   * @param {Array} fields fields of index instance\n   */\n\n\n  elasticlunr.Configuration.prototype.addAllFields2UserConfig = function (bool, expand, fields) {\n    fields.forEach(function (field) {\n      this.config[field] = {\n        boost: 1,\n        bool: bool,\n        expand: expand\n      };\n    }, this);\n  };\n  /**\n   * get current user configuration\n   */\n\n\n  elasticlunr.Configuration.prototype.get = function () {\n    return this.config;\n  };\n  /**\n   * reset user search configuration.\n   */\n\n\n  elasticlunr.Configuration.prototype.reset = function () {\n    this.config = {};\n  };\n  /**\n   * sorted_set.js is added only to make elasticlunr.js compatible with lunr-languages.\n   * if elasticlunr.js support different languages by default, this will make elasticlunr.js\n   * much bigger that not good for browser usage.\n   *\n   */\n\n  /*!\n   * lunr.SortedSet\n   * Copyright (C) 2016 Oliver Nightingale\n   */\n\n  /**\n   * lunr.SortedSets are used to maintain an array of uniq values in a sorted\n   * order.\n   *\n   * @constructor\n   */\n\n\n  lunr.SortedSet = function () {\n    this.length = 0;\n    this.elements = [];\n  };\n  /**\n   * Loads a previously serialised sorted set.\n   *\n   * @param {Array} serialisedData The serialised set to load.\n   * @returns {lunr.SortedSet}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.load = function (serialisedData) {\n    var set = new this();\n    set.elements = serialisedData;\n    set.length = serialisedData.length;\n    return set;\n  };\n  /**\n   * Inserts new items into the set in the correct position to maintain the\n   * order.\n   *\n   * @param {Object} The objects to add to this set.\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.add = function () {\n    var i, element;\n\n    for (i = 0; i < arguments.length; i++) {\n      element = arguments[i];\n      if (~this.indexOf(element)) continue;\n      this.elements.splice(this.locationFor(element), 0, element);\n    }\n\n    this.length = this.elements.length;\n  };\n  /**\n   * Converts this sorted set into an array.\n   *\n   * @returns {Array}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.toArray = function () {\n    return this.elements.slice();\n  };\n  /**\n   * Creates a new array with the results of calling a provided function on every\n   * element in this sorted set.\n   *\n   * Delegates to Array.prototype.map and has the same signature.\n   *\n   * @param {Function} fn The function that is called on each element of the\n   * set.\n   * @param {Object} ctx An optional object that can be used as the context\n   * for the function fn.\n   * @returns {Array}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.map = function (fn, ctx) {\n    return this.elements.map(fn, ctx);\n  };\n  /**\n   * Executes a provided function once per sorted set element.\n   *\n   * Delegates to Array.prototype.forEach and has the same signature.\n   *\n   * @param {Function} fn The function that is called on each element of the\n   * set.\n   * @param {Object} ctx An optional object that can be used as the context\n   * @memberOf SortedSet\n   * for the function fn.\n   */\n\n\n  lunr.SortedSet.prototype.forEach = function (fn, ctx) {\n    return this.elements.forEach(fn, ctx);\n  };\n  /**\n   * Returns the index at which a given element can be found in the\n   * sorted set, or -1 if it is not present.\n   *\n   * @param {Object} elem The object to locate in the sorted set.\n   * @returns {Number}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.indexOf = function (elem) {\n    var start = 0,\n        end = this.elements.length,\n        sectionLength = end - start,\n        pivot = start + Math.floor(sectionLength / 2),\n        pivotElem = this.elements[pivot];\n\n    while (sectionLength > 1) {\n      if (pivotElem === elem) return pivot;\n      if (pivotElem < elem) start = pivot;\n      if (pivotElem > elem) end = pivot;\n      sectionLength = end - start;\n      pivot = start + Math.floor(sectionLength / 2);\n      pivotElem = this.elements[pivot];\n    }\n\n    if (pivotElem === elem) return pivot;\n    return -1;\n  };\n  /**\n   * Returns the position within the sorted set that an element should be\n   * inserted at to maintain the current order of the set.\n   *\n   * This function assumes that the element to search for does not already exist\n   * in the sorted set.\n   *\n   * @param {Object} elem The elem to find the position for in the set\n   * @returns {Number}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.locationFor = function (elem) {\n    var start = 0,\n        end = this.elements.length,\n        sectionLength = end - start,\n        pivot = start + Math.floor(sectionLength / 2),\n        pivotElem = this.elements[pivot];\n\n    while (sectionLength > 1) {\n      if (pivotElem < elem) start = pivot;\n      if (pivotElem > elem) end = pivot;\n      sectionLength = end - start;\n      pivot = start + Math.floor(sectionLength / 2);\n      pivotElem = this.elements[pivot];\n    }\n\n    if (pivotElem > elem) return pivot;\n    if (pivotElem < elem) return pivot + 1;\n  };\n  /**\n   * Creates a new lunr.SortedSet that contains the elements in the intersection\n   * of this set and the passed set.\n   *\n   * @param {lunr.SortedSet} otherSet The set to intersect with this set.\n   * @returns {lunr.SortedSet}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.intersect = function (otherSet) {\n    var intersectSet = new lunr.SortedSet(),\n        i = 0,\n        j = 0,\n        a_len = this.length,\n        b_len = otherSet.length,\n        a = this.elements,\n        b = otherSet.elements;\n\n    while (true) {\n      if (i > a_len - 1 || j > b_len - 1) break;\n\n      if (a[i] === b[j]) {\n        intersectSet.add(a[i]);\n        i++, j++;\n        continue;\n      }\n\n      if (a[i] < b[j]) {\n        i++;\n        continue;\n      }\n\n      if (a[i] > b[j]) {\n        j++;\n        continue;\n      }\n    }\n\n    ;\n    return intersectSet;\n  };\n  /**\n   * Makes a copy of this set\n   *\n   * @returns {lunr.SortedSet}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.clone = function () {\n    var clone = new lunr.SortedSet();\n    clone.elements = this.toArray();\n    clone.length = clone.elements.length;\n    return clone;\n  };\n  /**\n   * Creates a new lunr.SortedSet that contains the elements in the union\n   * of this set and the passed set.\n   *\n   * @param {lunr.SortedSet} otherSet The set to union with this set.\n   * @returns {lunr.SortedSet}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.union = function (otherSet) {\n    var longSet, shortSet, unionSet;\n\n    if (this.length >= otherSet.length) {\n      longSet = this, shortSet = otherSet;\n    } else {\n      longSet = otherSet, shortSet = this;\n    }\n\n    unionSet = longSet.clone();\n\n    for (var i = 0, shortSetElements = shortSet.toArray(); i < shortSetElements.length; i++) {\n      unionSet.add(shortSetElements[i]);\n    }\n\n    return unionSet;\n  };\n  /**\n   * Returns a representation of the sorted set ready for serialisation.\n   *\n   * @returns {Array}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.toJSON = function () {\n    return this.toArray();\n  }\n  /**\n   * export the module via AMD, CommonJS or as a browser global\n   * Export code from https://github.com/umdjs/umd/blob/master/returnExports.js\n   */\n  ;\n\n  (function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      // AMD. Register as an anonymous module.\n      define(factory);\n    } else if (typeof exports === 'object') {\n      /**\n       * Node. Does not work with strict CommonJS, but\n       * only CommonJS-like enviroments that support module.exports,\n       * like Node.\n       */\n      module.exports = factory();\n    } else {\n      // Browser globals (root is window)\n      root.elasticlunr = factory();\n    }\n  })(this, function () {\n    /**\n     * Just return a value to define the module export.\n     * This example returns an object, but the module\n     * can return a function as the exported value.\n     */\n    return elasticlunr;\n  });\n})();"],"sourceRoot":""}