{"version":3,"sources":["webpack:///./node_modules/gatsby-tech-blog-theme/src/templates/category.js"],"names":["Content","styled","div","props","theme","colors","bg","breakpoints","tablet","phone","Category","pageContext","category","home","categoryPath","allMdx","data","nodes","totalCount","subline","title","config","siteTitle","to","xmlns","width","height","viewBox","fill","d","sectionTitle","map","post","frontmatter","date","excerpt","timeToRead","slug","fields","categories","path","key"],"mappings":"2FAAA,8GAgBMA,EAAUC,IAAOC,IAAV,oEAAGD,CAAH,yOAKS,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,MAG3B,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,YAAYC,UAGjC,SAAAL,GAAK,OAAIA,EAAMC,MAAMG,YAAYE,SAuDzCC,UAlDE,SAAC,GAGX,IAAD,IAFJC,YAAeC,EAEX,EAFWA,SAAUC,EAErB,EAFqBA,KAAMC,EAE3B,EAF2BA,aACvBC,EACJ,EADJC,KAAQD,OAEAE,EAAsBF,EAAtBE,MAAOC,EAAeH,EAAfG,WACTC,EAAaD,EAAN,SACI,IAAfA,EAAmB,GAAK,KADb,iBAEIN,EAFJ,IAIb,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQQ,MAAK,aAAeR,EAAf,MAA6BS,IAAOC,YACjD,kBAAC,IAAD,KACE,kBAAC,OAAD,CAAMC,GAAIV,GACR,yBACEW,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,QAEL,0BAAMC,EAAE,wDACR,0BAAMD,KAAK,OAAOC,EAAE,qBAI1B,kBAAC7B,EAAD,KACE,kBAAC,IAAD,mBAAgCY,GAChC,kBAAC,IAAD,CAASkB,cAAY,GAClBX,EADH,SACiB,kBAAC,OAAD,CAAMI,GAAIT,GAAV,kBADjB,KAGCG,EAAMc,KAAI,SAAAC,GAAI,OACb,kBAAC,IAAD,CACEZ,MAAOY,EAAKC,YAAYb,MACxBc,KAAMF,EAAKC,YAAYC,KACvBC,QAASH,EAAKG,QACdC,WAAYJ,EAAKI,WACjBC,KAAML,EAAKM,OAAOD,KAClBE,WAAYP,EAAKC,YAAYM,WAC7BC,KAAM3B,EACN4B,IAAKT,EAAKM,OAAOD","file":"component---node-modules-gatsby-tech-blog-theme-src-templates-category-js-8575c3f4728ea4e4add6.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Helmet from \"react-helmet\";\r\nimport { Link, graphql } from \"gatsby\";\r\nimport styled from \"styled-components\";\r\n\r\nimport {\r\n  Layout,\r\n  Wrapper,\r\n  Header,\r\n  Subline,\r\n  Article,\r\n  SectionTitle\r\n} from \"../components\";\r\nimport config from \"../../config\";\r\n\r\nconst Content = styled.div`\r\n  grid-column: 2;\r\n  box-shadow: 0 4px 120px rgba(0, 0, 0, 0.1);\r\n  border-radius: 1rem;\r\n  padding: 2rem 4rem;\r\n  background-color: ${props => props.theme.colors.bg};\r\n  z-index: 9000;\r\n  margin-top: -3rem;\r\n  @media (max-width: ${props => props.theme.breakpoints.tablet}) {\r\n    padding: 3rem 3rem;\r\n  }\r\n  @media (max-width: ${props => props.theme.breakpoints.phone}) {\r\n    padding: 2rem 1.5rem;\r\n  }\r\n`;\r\n\r\nconst Category = ({\r\n  pageContext: { category, home, categoryPath },\r\n  data: { allMdx }\r\n}) => {\r\n  const { nodes, totalCount } = allMdx;\r\n  const subline = `${totalCount} post${\r\n    totalCount === 1 ? \"\" : \"s\"\r\n  } tagged with \"${category}\"`;\r\n\r\n  return (\r\n    <Layout>\r\n      <Wrapper>\r\n        <Helmet title={`Category: ${category} | ${config.siteTitle}`} />\r\n        <Header>\r\n          <Link to={home}>\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"24\"\r\n              height=\"24\"\r\n              viewBox=\"0 0 24 24\"\r\n              fill=\"#FFF\"\r\n            >\r\n              <path d=\"M11.67 3.87L9.9 2.1 0 12l9.9 9.9 1.77-1.77L3.54 12z\" />\r\n              <path fill=\"none\" d=\"M0 0h24v24H0z\" />\r\n            </svg>\r\n          </Link>\r\n        </Header>\r\n        <Content>\r\n          <SectionTitle>Category &ndash; {category}</SectionTitle>\r\n          <Subline sectionTitle>\r\n            {subline} (See <Link to={categoryPath}>all categories</Link>)\r\n          </Subline>\r\n          {nodes.map(post => (\r\n            <Article\r\n              title={post.frontmatter.title}\r\n              date={post.frontmatter.date}\r\n              excerpt={post.excerpt}\r\n              timeToRead={post.timeToRead}\r\n              slug={post.fields.slug}\r\n              categories={post.frontmatter.categories}\r\n              path={home}\r\n              key={post.fields.slug}\r\n            />\r\n          ))}\r\n        </Content>\r\n      </Wrapper>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n\r\nCategory.propTypes = {\r\n  pageContext: PropTypes.shape({\r\n    category: PropTypes.string.isRequired\r\n  }).isRequired,\r\n  data: PropTypes.shape({\r\n    allMdx: PropTypes.shape({\r\n      nodes: PropTypes.array.isRequired,\r\n      totalCount: PropTypes.number.isRequired\r\n    })\r\n  }).isRequired\r\n};\r\n\r\nexport const postQuery = graphql`\r\n  query CategoryPage($category: String!) {\r\n    allMdx(\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { categories: { eq: $category } } }\r\n    ) {\r\n      totalCount\r\n      nodes {\r\n        frontmatter {\r\n          title\r\n          date(formatString: \"MM/DD/YYYY\")\r\n          categories\r\n        }\r\n        fields {\r\n          slug\r\n        }\r\n        excerpt(pruneLength: 200)\r\n        timeToRead\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}