{"version":3,"sources":["webpack:///./src/pages/projects.js"],"names":["Button","styled","a","Item","span","Date","div","projects","data","className","allProjectsYaml","edges","map","node","key","title","fluid","cover","childImageSharp","size","height","weight","role","aria-label","date","description","tags","tag","demo","href","repo"],"mappings":"8FAAA,yJASMA,EAASC,IAAOC,EAAV,uEAAGD,CAAH,+NAgBNE,EAAOF,IAAOG,KAAV,qEAAGH,CAAH,uDAMJI,EAAOJ,IAAOK,IAAV,qEAAGL,CAAH,oBAIK,SAASM,EAAT,GAA6B,IAATC,EAAQ,EAARA,KACjC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,yBAAKC,UAAU,kBACZD,GACCA,EAAKE,gBAAgBC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAC7B,yBAAKJ,UAAU,YAAYK,IAAKD,EAAKE,OACnC,kBAAC,IAAD,CACEN,UAAU,gBACVO,MAAOH,EAAKI,MAAMC,gBAAgBF,QAEpC,kBAAC,IAAD,CAASG,KAAK,OAAOC,OAAO,OAAOC,OAAO,OACvCR,EAAKE,OAER,kBAACV,EAAD,KACE,0BAAMiB,KAAK,MAAMC,aAAW,QAA5B,MAEQ,IACPV,EAAKW,MAER,kBAAC,IAAD,CAAaL,KAAK,OAAOC,OAAO,QAC7BP,EAAKY,YACN,0CACe,IACZZ,EAAKa,KAAKd,KAAI,SAAAe,GAAG,OAChB,kBAACxB,EAAD,CAAMW,IAAKa,GAAMA,QAItBd,EAAKe,KAAO,kBAAC5B,EAAD,CAAQ6B,KAAMhB,EAAKe,MAAnB,QAAyC,KACrDf,EAAKiB,KAAO,kBAAC9B,EAAD,CAAQ6B,KAAMhB,EAAKiB,MAAnB,UAA2C","file":"component---src-pages-projects-js-dbe28185e7513fdc99ba.js","sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\nimport Layout from \"../components/Layout\";\nimport styled from \"styled-components\";\nimport Heading from \"../components/Typography/Heading\";\nimport Description from \"../components/Typography/Description\";\nimport PageGrid from \"../components/Responsive/PageGrid\";\n\nconst Button = styled.a`\n  padding: 5px 20px;\n  background: transparent;\n  border: 2px solid #616caa;\n  border-radius: 5px;\n  margin-right: 15px;\n  color: #616caa;\n  font-weight: bold;\n  text-decoration: none;\n  text-transform: uppercase;\n  &:hover {\n    background: #616caa;\n    color: #fff;\n  }\n`;\n\nconst Item = styled.span`\n  margin-right: 5px;\n  color: #616caa;\n  font-style: italic;\n`;\n\nconst Date = styled.div`\n  margin: 22px 0;\n`;\n\nexport default function projects({ data }) {\n  return (\n    <Layout>\n      <PageGrid>\n        <div className=\"grid-container\">\n          {data &&\n            data.allProjectsYaml.edges.map(({ node }) => (\n              <div className=\"grid-item\" key={node.title}>\n                <Img\n                  className=\"project-image\"\n                  fluid={node.cover.childImageSharp.fluid}\n                />\n                <Heading size=\"24px\" height=\"33px\" weight=\"400\">\n                  {node.title}\n                </Heading>\n                <Date>\n                  <span role=\"img\" aria-label=\"Date\">\n                    📅\n                  </span>{\" \"}\n                  {node.date}\n                </Date>\n                <Description size=\"18px\" height=\"25px\">\n                  {node.description}\n                  <p>\n                    ️️Built with{\" \"}\n                    {node.tags.map(tag => (\n                      <Item key={tag}>{tag}</Item>\n                    ))}\n                  </p>\n                </Description>\n                {node.demo ? <Button href={node.demo}>Demo</Button> : null}\n                {node.repo ? <Button href={node.repo}>Source</Button> : null}\n              </div>\n            ))}\n        </div>\n      </PageGrid>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query ProjectsQuery {\n    allProjectsYaml(sort: { fields: date, order: DESC }) {\n      edges {\n        node {\n          title\n          description\n          cover {\n            childImageSharp {\n              fluid(maxWidth: 800) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          demo\n          repo\n          date\n          tags\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}